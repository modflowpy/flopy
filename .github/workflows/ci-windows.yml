name: flopy Windows CI

on:
  schedule:
    - cron: '0 8 * * *' # run at 8 AM UTC (12 am PST)
  push:
    branches:
      - master
      - develop
      - 'release*'
  pull_request:
    branches: [master, develop]

jobs:

  flopy_setup:
    name: standard installation
    runs-on: windows-latest
    strategy:
      fail-fast: false
    defaults:
      run:
        shell: pwsh

    steps:

    # check out repo
    - name: Checkout flopy repo
      uses: actions/checkout@v2.3.4

    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.9

    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip

    - name: Base flopy installation
      run: |
        pip install .

    - name: Print flopy version
      run: |
        python -c "import flopy; print(f'{flopy.__version__=}')"


  flopyCI_windows:
    name: autotests
    needs: [flopy_setup]
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9, 3.8, 3.7]
    defaults:
      run:
        shell: pwsh

    steps:
    # check out repo
    - name: Checkout flopy repo
      uses:  actions/checkout@v2.3.4

    - name: Get branch name
      uses: nelonoel/branch-name@v1.0.1

    - name: Cache Miniconda
      uses: actions/cache@v2.1.0
      env:
        # Increase this value to reset cache if environment.yml has changed
        CACHE_NUMBER: 3
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.run-type }}-${{ env.CACHE_NUMBER }}-${{ hashFiles('etc/environment.yml') }}

    # Standard python fails on windows without GDAL installation
    # Using custom bash shell ("shell: bash -l {0}") with Miniconda
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2.1.1
      with:
        python-version: ${{ matrix.python-version }}
        channels: conda-forge
        auto-update-conda: true
        activate-environment: flopy
        use-only-tar-bz2: true

    - name: Add packages to flopy environment using conda
      run: |
        conda env update --name flopy --file etc/environment.yml

    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip

    - name: Install pymake, xmipy, and flopy
      run: |
        pip install https://github.com/modflowpy/pymake/zipball/master
        pip install xmipy
        pip install .

    - name: Prepare for the autotests
      working-directory: ./autotest
      run: |
        pytest -v ci_prepare.py

#    - name: Add executables directory to path on Windows (bash)
#      run: |
#        echo "C:\Users\runneradmin\.local\bin" >> $GITHUB_PATH

    - name: Add executables directory to path on Windows (pwsh)
      run: |
        echo "C:\Users\runneradmin\.local\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Run pytest on autotest scripts
      working-directory: ./autotest
      run: |
        pytest -v -n auto --durations=0 --cov=flopy --cov-report=xml

    - name: Print coverage report before upload
      working-directory: ./autotest
      run: |
        coverage report

    - name: Upload coverage to Codecov
      if:
        github.repository_owner == 'modflowpy' && github.event_name == 'push'
      uses: codecov/codecov-action@v2.1.0
      with:
        directory: ./autotest
        file: coverage.xml
