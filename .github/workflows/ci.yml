name: flopy continuous integration

on:
  push:
  pull_request:

jobs:

  flopy_lint:
    name: flopy linting
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:

    - uses: actions/checkout@v2

    # - name: Setup Miniconda
    #   uses: goanpeca/setup-miniconda@v1.6.0
    #   with:
    #     python-version: 3.8
    #     activate-environment: flopy
    #     auto-update-conda: true
    #     environment-file: environment.yml

    - name: Setup Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Print python version
      # shell: bash -l {0}
      shell: bash
      run: |
        python --version

    - name: Install Python 3.8 packages
      # shell: bash -l {0}
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.pip.txt

    - name: Run black
      # shell: bash -l {0}
      shell: bash
      run: |
        echo "if black check fails run"
        echo "  black --line-length 79 ./flopy"
        echo "and then commit the changes."
        black --check --line-length 79 ./flopy

    - name: Run flake8
      # shell: bash -l {0}
      shell: bash
      run: |
        flake8 --count --show-source --exit-zero ./flopy

    - name: Run pylint
      # shell: bash -l {0}
      shell: bash
      run: |
        pylint --jobs=2 --errors-only --exit-zero ./flopy

  flopyCI:
    name: Run pymake CI on different python versions and different OSs
    needs: flopy_lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.7, 3.6]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2

    # - name: Setup Miniconda
    #   uses: goanpeca/setup-miniconda@v1.6.0
    #   with:
    #     python-version: ${{ matrix.python-version }}
    #     activate-environment: flopy
    #     auto-update-conda: true
    #     environment-file: environment.yml
    #
    # - name: Determine python environment
    #   shell: bash -l {0}
    #   run: |
    #     conda info
    #     conda list

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Print python version
      # shell: bash -l {0}
      shell: bash
      run: |
        python --version

    - name: Install Python ${{ matrix.python-version }} packages
      # shell: bash -l {0}
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.pip.txt

    - name: Install pymake and flopy
      # shell: bash -l {0}
      shell: bash
      run: |
        pip install .
        pip install https://github.com/modflowpy/pymake/zipball/master

    - name: Download executables
      # shell: bash -l {0}
      shell: bash
      run: |
        nosetests -v get_exes.py --with-id --with-timer -w ./autotest

    - name: Add executables directory to path
      # shell: bash -l {0}
      shell: bash
      run: |
        echo "::add-path::$HOME/.local/bin"

    - name: Run nosetests
      # shell: bash -l {0}
      shell: bash
      run: |
        nosetests -v --with-id --with-timer --with-coverage -w ./autotest

    - name: List xml files in the root directory
      # shell: bash -l {0}
      shell: bash
      run: |
        ls -l *.xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1.0.12
