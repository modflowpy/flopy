name: pymake continuous integration

on:
  push:
  pull_request:

jobs:

  flopy_lint:
    name: flopy linting
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:

    - uses: actions/checkout@v2

    - name: setup-conda
      uses: s-weigand/setup-conda@v1.0.3
      with:
        update-conda: true
        conda-channels: anaconda, conda-forge

    - name: Install packages
      shell: bash
      run: |
        conda install -c anaconda pip
        conda install -c conda-forge --yes --file requirements.txt
        pip install https://github.com/modflowpy/pymake/zipball/master
        pip install pylint flake8 black

    - name: Run black
      run: black --check --line-length 79 ./flopy

    - name: Run flake8
      run: flake8 --count --show-source --exit-zero ./flopy

    - name: Run pylint
      run: |
        pylint --jobs=2 --errors-only --exit-zero ./flopy

  flopyCI:
    name: Run pymake CI on different python versions and different OSs
    needs: flopy_lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.7, 3.6]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: setup-conda ${{ matrix.python-version }}
      uses: s-weigand/setup-conda@v1.0.3
      with:
        update-conda: true
        python-version: ${{ matrix.python-version }}
        conda-channels: anaconda, conda-forge

    - name: Install python packages
      shell: bash
      run: |
        conda install -c anaconda pip
        conda install -c conda-forge --yes --file requirements.txt
        pip install nose-timer nose-cov

    - name: Remove numpy and reinstall with pip (Windows)
      if: runner.os == 'Windows'
      run: |
        conda uninstall numpy
        pip install numpy

    - name: Install pymake and flopy
      shell: bash
      run: |
        pip install https://github.com/modflowpy/pymake/zipball/master
        echo "Install flopy..."
        pip install .

    - name: Download executables
      shell: bash
      run: |
        echo "Download executables..."
        cd autotest
        python get_exes.py
        cd ..
        #nosetests -v get_exes.py --with-id --with-timer -w ./autotest

    - name: Add bin directory on Linux, macOS, and Windows
      shell: bash
      run: |
        echo "::add-path::$HOME/.local/bin"

    - name: Run nosetests
      shell: bash
      run: |
        echo "Running autotests..."
        nosetests -v --with-id --with-timer --with-cov --cov-report=xml --cov=flopy -w ./autotest

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
