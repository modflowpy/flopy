name: flopy continuous integration

on:
  push:
  pull_request:

jobs:

  flopy_lint:
    name: linting
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:

    # check out repo
    - name: Checkout flopy repo
      uses: actions/checkout@v2

    # Standard python fails on windows without GDAL installation. Using
    # standard python here since only linting on linux.
    # Use standard bash shell with standard python
    - name: Setup Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Print python version
      shell: bash
      run: |
        python --version

    - name: Install Python 3.8 packages
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.pip.txt

    - name: Run black
      shell: bash
      run: |
        echo "if black check fails run"
        echo "  black --line-length 79 ./flopy"
        echo "and then commit the changes."
        black --check --line-length 79 ./flopy

    - name: Run flake8
      shell: bash
      run: |
        flake8 --count --show-source --exit-zero ./flopy

    - name: Run pylint
      shell: bash
      run: |
        pylint --jobs=2 --errors-only --exit-zero ./flopy

  flopyScriptNotebookCI:
    name: additional tests
    needs: flopy_lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test-file: [autotest_notebooks.py, autotest_scripts.py]
    steps:
    # check out repo
    - name: Checkout flopy repo
      uses: actions/checkout@v2

    # Standard python fails on windows without GDAL installation
    # Using custom bash shell ("shell: bash -l {0}") with Miniconda
    - name: Setup Miniconda
      uses: goanpeca/setup-miniconda@v1.6.0
      with:
        python-version: 3.8
        activate-environment: flopy
        auto-update-conda: true
        environment-file: environment.yml

    - name: Determine python environment
      shell: bash -l {0}
      run: |
        conda info
        conda list

    - name: Install additional Python 3.8 packages
      if: matrix.test-file == 'autotest_notebooks.py'
      shell: bash -l {0}
      run: |
        conda install nbconvert jupyter

    - name: Install xmipy, pymake, and flopy
      shell: bash -l {0}
      run: |
        pip install xmipy
        pip install .
        pip install https://github.com/modflowpy/pymake/zipball/master

    - name: Download executables needed for tests
      shell: bash -l {0}
      run: |
        python ./autotest/get_exes.py

    - name: Add executables directory to path
      shell: bash
      run: |
        echo "::add-path::$HOME/.local/bin"

    - name: Run ${{ matrix.test-file }} CI
      shell: bash -l {0}
      run: |
        coverage run -m nose -v ${{ matrix.test-file }} --with-id --with-timer \
        --with-coverage --cover-package=flopy --cover-xml \
        --cover-xml-file=../coverage.xml -w ./autotest

    - name: List files in the root directory
      shell: bash
      run: |
        ls -l

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1.0.12
      with:
        file: ./coverage.xml

  flopyCI:
    name: autotests
    needs: flopy_lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.7, 3.6]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    # check out repo
    - name: Checkout flopy repo
      uses: actions/checkout@v2

    # Standard python fails on windows without GDAL installation
    # Using custom bash shell ("shell: bash -l {0}") with Miniconda
    - name: Setup Miniconda
      uses: goanpeca/setup-miniconda@v1.6.0
      with:
        python-version: ${{ matrix.python-version }}
        activate-environment: flopy
        auto-update-conda: true
        environment-file: environment.yml

    - name: Determine python environment
      shell: bash -l {0}
      run: |
        conda info
        conda list

    - name: Install xmipy, pymake, and flopy
      shell: bash -l {0}
      run: |
        pip install xmipy
        pip install .
        pip install https://github.com/modflowpy/pymake/zipball/master

    - name: Download executables needed for tests
      shell: bash -l {0}
      run: |
        python ./autotest/get_exes.py

    - name: Add executables directory to path
      shell: bash
      run: |
        echo "::add-path::$HOME/.local/bin"

    - name: Run nosetests
      shell: bash -l {0}
      run: |
        coverage run -m nose -v --with-id --with-timer \
        --with-coverage --cover-package=flopy --cover-xml \
        --cover-xml-file=../coverage.xml -w ./autotest

    - name: List files in the root directory
      shell: bash
      run: |
        ls -l

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1.0.12
      with:
        file: ./coverage.xml
