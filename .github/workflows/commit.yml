name: Commit continuous integration
on:
  push:
  pull_request:
    branches:
      - master
      - develop
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    timeout-minutes: 10
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: false

      - name: Build package
        run: uv build

      - name: Check package
        run: uvx twine check --strict dist/*

  lint:
    name: Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    timeout-minutes: 10

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: false

      - name: Lint
        run: uvx ruff check

      - name: Check format
        run: uvx ruff format --check

      - name: Check spelling
        run: uvx codespell

      - name: Check CITATION.cff
        run: |
          uvx cffconvert --validate
          uvx cffconvert -f apalike
          uvx cffconvert -f bibtex

  smoke:
    name: Smoke test
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    timeout-minutes: 10
    env:
      PYTHON_VERSION: 3.9

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: astral-sh/setup-uv@v5
        with:
          cache-dependency-glob: "**/pyproject.toml"

      - name: Install Python dependencies
        # temp. allow prereleases for vtk on aarch64
        run: uv sync --all-extras --prerelease=allow
      
      - name: Install Modflow executables
        uses: modflowpy/install-modflow-action@v1
      
      - name: Smoke test
        working-directory: autotest
        run: uv run pytest -v -n=auto --smoke --cov=flopy --cov-report=xml --durations=0 --keep-failed=.failed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload failed test outputs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: failed-smoke-${{ runner.os }}-${{ env.PYTHON_VERSION }}
          path: autotest/.failed/**
      
      - name: Upload coverage
        if: github.repository_owner == 'modflowpy' && (github.event_name == 'push' || github.event_name == 'pull_request')
        uses: codecov/codecov-action@v5
        with:
          files: autotest/coverage.xml

  test:
    name: Test
    needs: smoke
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ 3.9, "3.10", "3.11", "3.12" ]
    defaults:
      run:
        shell: bash -l {0}
    timeout-minutes: 60
    steps:

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: astral-sh/setup-uv@v5
        with:
          cache-dependency-glob: "**/pyproject.toml"
          python-version: ${{ matrix.python-version }}

      - name: Install FloPy
        run: uv sync --all-extras

      - name: Install Modflow-related executables
        uses: modflowpy/install-modflow-action@v1

      - name: Install Modflow dev build executables
        uses: modflowpy/install-modflow-action@v1
        with:
          repo: modflow6-nightly-build

      - name: Install triangle (macOS workaround)
        if: runner.os == 'macOS'
        uses: modflowpy/install-modflow-action@v1
        with:
          repo: executables
          ostag: mac
          subset: triangle

      - name: Update package classes
        run: uv run python -m flopy.mf6.utils.generate_classes --ref develop --no-backup

      - name: Run tests
        working-directory: autotest
        run: |
          uv run pytest -v -m="not example" -n=auto --cov=flopy --cov-append --cov-report=xml --durations=0 --keep-failed=.failed --dist loadfile
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Report coverage
        working-directory: autotest
        run: uv run coverage report

      - name: Upload failed test outputs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: failed-${{ matrix.os }}-${{ matrix.python-version }}
          path: autotest/.failed/**

      - name: Upload coverage
        if: github.repository_owner == 'modflowpy' && (github.event_name == 'push' || github.event_name == 'pull_request')
        uses: codecov/codecov-action@v5
        with:
          files: autotest/coverage.xml
