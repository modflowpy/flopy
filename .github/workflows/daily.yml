name: FloPy daily tasks

on:
  schedule:
    - cron: '0 8 * * *' # run at 8 AM UTC (12 am PST)

jobs:
  regression:
    name: Regression tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        python-version: [ 3.7, 3.8, 3.9, "3.10" ]
        exclude:
          # avoid shutil.copytree infinite recursion bug
          # https://github.com/python/cpython/pull/17098
          - python-version: '3.8.0'
        include:
          - os: ubuntu-latest
            path: ~/.cache/pip
          - os: macos-latest
            path: ~/Library/Caches/pip
    defaults:
      run:
        shell: bash
    timeout-minutes: 90

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2.3.4

      # Caching disabled until hashFiles issue resolved: https://github.com/actions/runner/issues/1840
      # - name: Cache python
      #   uses: actions/cache@v3
      #   with:
      #     path: ${{ matrix.path }}
      #     key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('setup.cfg') }}
      #     restore-keys: |
      #       ${{ runner.os }}-${{ matrix.python-version }}-pip-

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get branch name
        uses: nelonoel/branch-name@v1.0.1

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install ".[test, optional]"

      - name: Install modflow executables
        working-directory: ./autotest
        run: |
          mkdir -p $HOME/.local/bin
          get-modflow $HOME/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests
        working-directory: ./autotest
        run: |
          pytest -v -m="regression" -n=auto --cov=flopy --cov-report=xml --durations=0 --keep-failed=.failed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload failed test outputs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: failed-${{ matrix.os }}-${{ matrix.python-version }}
          path: |
            ./autotest/.failed/**

      - name: Print coverage report
        working-directory: ./autotest
        run: |
          coverage report

      - name: Upload coverage
        if:
          github.repository_owner == 'modflowpy' && github.event_name == 'push'
        uses: codecov/codecov-action@v2.1.0
        with:
          directory: ./autotest
          file: coverage.xml

  examples:
    name: Example scripts & notebooks
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        python-version: [ 3.7, 3.8, 3.9, "3.10" ]
        exclude:
          # avoid shutil.copytree infinite recursion bug
          # https://github.com/python/cpython/pull/17098
          - python-version: '3.8.0'
        include:
          - os: ubuntu-latest
            path: ~/.cache/pip
          - os: macos-latest
            path: ~/Library/Caches/pip
    defaults:
      run:
        shell: bash
    timeout-minutes: 90

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2.3.4

      # Caching disabled until hashFiles issue resolved: https://github.com/actions/runner/issues/1840
      # - name: Cache python
      #   uses: actions/cache@v3
      #   with:
      #     path: ${{ matrix.path }}
      #     key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('setup.cfg') }}
      #     restore-keys: |
      #       ${{ runner.os }}-${{ matrix.python-version }}-pip-

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get branch name
        uses: nelonoel/branch-name@v1.0.1

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install ".[test, optional]"

      - name: Install modflow executables
        working-directory: ./autotest
        run: |
          mkdir -p $HOME/.local/bin
          get-modflow $HOME/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests
        working-directory: ./autotest
        run: |
          pytest -v -m="example" -n=auto --cov=flopy --cov-report=xml --durations=0 --keep-failed=.failed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload failed test outputs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: failed-${{ matrix.os }}-${{ matrix.python-version }}
          path: |
            ./autotest/.failed/**

      - name: Print coverage report
        working-directory: ./autotest
        run: |
          coverage report

      - name: Upload coverage
        if:
          github.repository_owner == 'modflowpy' && github.event_name == 'push'
        uses: codecov/codecov-action@v2.1.0
        with:
          directory: ./autotest
          file: coverage.xml

  benchmark:
    name: Benchmarks
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        python-version: [ 3.7, 3.8, 3.9, "3.10" ]
        exclude:
          # avoid shutil.copytree infinite recursion bug
          # https://github.com/python/cpython/pull/17098
          - python-version: '3.8.0'
        include:
          - os: ubuntu-latest
            path: ~/.cache/pip
          - os: macos-latest
            path: ~/Library/Caches/pip
    defaults:
      run:
        shell: bash
    timeout-minutes: 90

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2.3.4

      # Caching disabled until hashFiles issue resolved: https://github.com/actions/runner/issues/1840
      # - name: Cache python
      #   uses: actions/cache@v3
      #   with:
      #     path: ${{ matrix.path }}
      #     key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('setup.cfg') }}
      #     restore-keys: |
      #       ${{ runner.os }}-${{ matrix.python-version }}-pip-

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get branch name
        uses: nelonoel/branch-name@v1.0.1

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install ".[test, optional]"

      - name: Install modflow executables
        working-directory: ./autotest
        run: |
          mkdir -p $HOME/.local/bin
          get-modflow $HOME/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Load cached benchmark results (for comparison)
        uses: actions/cache@v3
        with:
          path: ./autotest/.benchmarks
          key: benchmark-${{ matrix.os }}-${{ matrix.python-version }}

      - name: Run benchmarks
        working-directory: ./autotest
        run: |
          pytest -v --durations=0 --cov=flopy --cov-report=xml --benchmark-only --benchmark-autosave --benchmark-compare --benchmark-compare-fail=mean:25% --keep-failed=.failed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload failed benchmark outputs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: failed-${{ matrix.os }}-${{ matrix.python-version }}
          path: |
            ./autotest/.failed/**

      - name: Upload benchmark results
        uses: actions/upload-artifact@v2
        with:
          name: benchmark-${{ matrix.os }}-${{ matrix.python-version }}
          path: |
            ./autotest/.benchmarks/**/*.json

      - name: Print coverage report
        working-directory: ./autotest
        run: |
          coverage report

      - name: Upload coverage
        if:
          github.repository_owner == 'modflowpy' && github.event_name == 'push'
        uses: codecov/codecov-action@v2.1.0
        with:
          directory: ./autotest
          file: coverage.xml

  regression_windows:
    name: Regression tests (Windows)
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.7, 3.8, 3.9, "3.10" ]
        exclude:
          # avoid shutil.copytree infinite recursion bug
          # https://github.com/python/cpython/pull/17098
          - python-version: '3.8.0'
    defaults:
      run:
        shell: pwsh
    timeout-minutes: 90

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2.3.4

      - name: Get branch name
        uses: nelonoel/branch-name@v1.0.1

      # Caching disabled until hashFiles issue resolved: https://github.com/actions/runner/issues/1840
      # - name: Cache Miniconda
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/conda_pkgs_dir
      #     key: ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.run-type }}-${{ hashFiles('etc/environment.yml') }}

      # Standard python fails on windows without GDAL installation
      # Using custom bash shell ("shell: bash -l {0}") with Miniconda
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
          auto-update-conda: true
          activate-environment: flopy
          use-only-tar-bz2: true

      - name: Install Python dependencies
        run: |
          conda env update --name flopy --file etc/environment.yml
          python -m pip install --upgrade pip
          pip install https://github.com/modflowpy/pymake/zipball/master
          pip install xmipy
          pip install .

      - name: Install modflow executables
        run: |
          md C:\Users\runneradmin\.local\bin
          get-modflow "C:\Users\runneradmin\.local\bin"
          echo "C:\Users\runneradmin\.local\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests
        working-directory: ./autotest
        run: |
          pytest -v -n auto -m "regression" --cov=flopy --cov-report=xml --durations=0 --keep-failed=.failed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload failed test outputs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: failed-${{ matrix.os }}-${{ matrix.python-version }}
          path: |
            ./autotest/.failed/**

      - name: Print coverage report
        working-directory: ./autotest
        run: |
          coverage report

      - name: Upload coverage
        if:
          github.repository_owner == 'modflowpy' && github.event_name == 'push'
        uses: codecov/codecov-action@v2.1.0
        with:
          directory: ./autotest
          file: coverage.xml

  examples_windows:
    name: Example scripts & notebooks (Windows)
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.7, 3.8, 3.9, "3.10" ]
        exclude:
          # avoid shutil.copytree infinite recursion bug
          # https://github.com/python/cpython/pull/17098
          - python-version: '3.8.0'
    defaults:
      run:
        shell: pwsh
    timeout-minutes: 90

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2.3.4

      - name: Get branch name
        uses: nelonoel/branch-name@v1.0.1

      # Caching disabled until hashFiles issue resolved: https://github.com/actions/runner/issues/1840
      # - name: Cache Miniconda
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/conda_pkgs_dir
      #     key: ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.run-type }}-${{ hashFiles('etc/environment.yml') }}

      # Standard python fails on windows without GDAL installation
      # Using custom bash shell ("shell: bash -l {0}") with Miniconda
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
          auto-update-conda: true
          activate-environment: flopy
          use-only-tar-bz2: true

      - name: Install Python dependencies
        run: |
          conda env update --name flopy --file etc/environment.yml
          python -m pip install --upgrade pip
          pip install https://github.com/modflowpy/pymake/zipball/master
          pip install xmipy
          pip install .

      - name: Install modflow executables
        run: |
          md C:\Users\runneradmin\.local\bin
          get-modflow "C:\Users\runneradmin\.local\bin"
          echo "C:\Users\runneradmin\.local\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests
        working-directory: ./autotest
        run: |
          pytest -v -n auto -m "example" --cov=flopy --cov-report=xml --durations=0 --keep-failed=.failed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload failed test outputs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: failed-${{ matrix.os }}-${{ matrix.python-version }}
          path: |
            ./autotest/.failed/**

      - name: Print coverage report
        working-directory: ./autotest
        run: |
          coverage report

      - name: Upload coverage
        if:
          github.repository_owner == 'modflowpy' && github.event_name == 'push'
        uses: codecov/codecov-action@v2.1.0
        with:
          directory: ./autotest
          file: coverage.xml

  benchmark_windows:
    name: Benchmarks (Windows)
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.7, 3.8, 3.9, "3.10" ]
        exclude:
          # avoid shutil.copytree infinite recursion bug
          # https://github.com/python/cpython/pull/17098
          - python-version: '3.8.0'
    defaults:
      run:
        shell: pwsh
    timeout-minutes: 90

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2.3.4

      - name: Get branch name
        uses: nelonoel/branch-name@v1.0.1

      # Caching disabled until hashFiles issue resolved: https://github.com/actions/runner/issues/1840
      # - name: Cache Miniconda
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/conda_pkgs_dir
      #     key: ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.run-type }}-${{ hashFiles('etc/environment.yml') }}

      # Standard python fails on windows without GDAL installation
      # Using custom bash shell ("shell: bash -l {0}") with Miniconda
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
          auto-update-conda: true
          activate-environment: flopy
          use-only-tar-bz2: true

      - name: Install Python dependencies
        run: |
          conda env update --name flopy --file etc/environment.yml
          python -m pip install --upgrade pip
          pip install https://github.com/modflowpy/pymake/zipball/master
          pip install xmipy
          pip install .

      - name: Install modflow executables
        run: |
          md C:\Users\runneradmin\.local\bin
          get-modflow "C:\Users\runneradmin\.local\bin"
          echo "C:\Users\runneradmin\.local\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Load cached benchmark results (for comparison)
        uses: actions/cache@v3
        with:
          path: ./autotest/.benchmarks
          key: benchmark-${{ runner.os }}-${{ matrix.python-version }}

      - name: Run benchmarks
        working-directory: ./autotest
        run: |
          pytest -v --durations=0 --cov=flopy --cov-report=xml --benchmark-only --benchmark-autosave --benchmark-compare --benchmark-compare-fail=mean:25% --keep-failed=.failed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload failed benchmark outputs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: failed-${{ matrix.os }}-${{ matrix.python-version }}
          path: |
            ./autotest/.failed/**

      - name: Upload benchmark results
        uses: actions/upload-artifact@v2
        with:
          name: benchmark-${{ runner.os }}-${{ matrix.python-version }}
          path: |
            ./autotest/.benchmarks/**/*.json

      - name: Print coverage report
        working-directory: ./autotest
        run: |
          coverage report

      - name: Upload coverage
        if:
          github.repository_owner == 'modflowpy' && github.event_name == 'push'
        uses: codecov/codecov-action@v2.1.0
        with:
          directory: ./autotest
          file: coverage.xml