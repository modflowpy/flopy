name: FloPy regression tests

on:
  schedule:
    - cron: '0 8 * * *' # run at 8 AM UTC (12 am PST)

jobs:
  regression:
    name: Regression tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ 3.8, 3.9, "3.10", "3.11" ]
        exclude:
          # avoid shutil.copytree infinite recursion bug
          # https://github.com/python/cpython/pull/17098
          - python-version: '3.8.0'
    defaults:
      run:
        shell: bash
    timeout-minutes: 90
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        if: runner.os != 'Windows'
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: pyproject.toml

      - name: Install Python dependencies
        if: runner.os != 'Windows'
        run: |
          pip install --upgrade pip
          pip install .
          pip install ".[test, optional]"

      - name: Setup Micromamba
        if: runner.os == 'Windows'
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: etc/environment.yml
          cache-environment: true
          cache-downloads: true
          create-args: >-
            python=${{ matrix.python-version }}
          init-shell: >-
            bash
            powershell

      - name: Install extra Python dependencies
        if: runner.os == 'Windows'
        shell: bash -l {0}
        run: |
          pip install xmipy
          pip install .

      - name: Install Modflow-related executables
        uses: modflowpy/install-modflow-action@v1

      - name: Install Modflow dev build executables
        uses: modflowpy/install-modflow-action@v1
        with:
          repo: modflow6-nightly-build

      - name: Update FloPy packages
        if: runner.os != 'Windows'
        run: python -m flopy.mf6.utils.generate_classes --ref develop --no-backup

      - name: Update FloPy packages
        if: runner.os == 'Windows'
        shell: bash -l {0}
        run: python -m flopy.mf6.utils.generate_classes --ref develop --no-backup

      - name: Run regression tests
        if: runner.os != 'Windows'
        working-directory: ./autotest
        run: pytest -v -m="regression" -n=auto --durations=0 --keep-failed=.failed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run regression tests
        if: runner.os == 'Windows'
        shell: bash -l {0}
        working-directory: ./autotest
        run: pytest -v -m="regression" -n=auto --durations=0 --keep-failed=.failed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload failed test outputs
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: failed-regression-${{ matrix.os }}-${{ matrix.python-version }}
          path: |
            ./autotest/.failed/**
