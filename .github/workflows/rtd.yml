name: FloPy documentation

on:
  push:
  pull_request:
    branches:
      - master
      - develop

jobs:

  rtd_build:
    name: Prepare and test notebooks
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout flopy repo
        uses: actions/checkout@v4

      - name: Output repo information
        run: |
          echo $GITHUB_REPOSITORY_OWNER
          echo $GITHUB_REPOSITORY
          echo $GITHUB_REF
          echo $GITHUB_EVENT_NAME

      - name: Setup Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: etc/environment.yml
          cache-environment: true
          cache-downloads: true
          create-args: >-
            python=3.12
          init-shell: >-
            bash
            powershell

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install .
      
      - name: Workaround OpenGL issue on Linux
        if: runner.os == 'Linux'
        run: |
          # referenced from https://github.com/pyvista/pyvista/blob/main/.github/workflows/vtk-pre-test.yml#L53
          pip uninstall -y vtk
          pip install --extra-index-url https://wheels.vtk.org trame vtk-osmesa
      
      - name: Install fonts on Linux
        if: runner.os == 'Linux'
        run: |
          echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo debconf-set-selections
          sudo apt-get install ttf-mscorefonts-installer fonts-liberation
          sudo rm -rf ~/.cache/matplotlib
      
      - name: Install OpenGL on Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference = "Stop"
          $PSDefaultParameterValues['*:ErrorAction']='Stop'
          powershell .github/install_opengl.ps1

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install https://github.com/modflowpy/pymake/zipball/master
          pip install https://github.com/Deltares/xmipy/zipball/develop
          pip install https://github.com/MODFLOW-USGS/modflowapi/zipball/develop
          pip install .[test,optional]

      - name: Setup GNU Fortran
        uses: fortran-lang/setup-fortran@v1
        with:
          compiler: gcc
          version: 13

      - name: Checkout MODFLOW 6
        uses: actions/checkout@v4
        with:
          repository: MODFLOW-USGS/modflow6
          path: modflow6

      - name: Update flopy MODFLOW 6 classes
        working-directory: modflow6/autotest
        run: |
          python update_flopy.py

      - name: Install meson
        run: |
          pip3 install meson ninja

      - name: Setup modflow
        working-directory: modflow6
        run: |
          meson setup builddir --buildtype=debugoptimized --prefix=$(pwd) --libdir=bin

      - name: Build modflow
        working-directory: modflow6
        run: |
          meson compile -C builddir

      - name: Install modflow
        working-directory: modflow6
        run: |
          meson install -C builddir

      - name: Get executables
        working-directory: modflow6/autotest
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          pytest -v --durations=0 get_exes.py

      - name: Run tutorial and example notebooks
        working-directory: autotest
        run: pytest -v -n auto test_notebooks.py

      - name: Upload notebooks artifact for ReadtheDocs
        if: github.repository_owner == 'modflowpy' && github.event_name == 'push' && runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: notebooks-for-${{ github.sha }}
          path: .docs/Notebooks/*.ipynb

  # trigger rtd if previous job was successful
  rtd:
    name: Read the Docs trigger
    needs: rtd_build
    runs-on: ubuntu-latest

    if:
      github.repository_owner == 'modflowpy' && github.event_name == 'push'
    steps:
      - name: Trigger RTDs build on master and develop branches
        uses: dfm/rtds-action@v1
        with:
          webhook_url: ${{ secrets.RTDS_WEBHOOK_URL }}
          webhook_token: ${{ secrets.RTDS_WEBHOOK_TOKEN }}
          commit_ref: ${{ github.ref }}
