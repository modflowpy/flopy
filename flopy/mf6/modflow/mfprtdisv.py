# autogenerated file, do not modify

from os import PathLike, curdir
from typing import Union

from flopy.mf6.data.mfdatautil import ArrayTemplateGenerator, ListTemplateGenerator
from flopy.mf6.mfpackage import MFChildPackages, MFPackage


class ModflowPrtdisv(MFPackage):
    """
    ModflowPrtdisv defines a DISV package.

    Parameters
    ----------
    length_units : string
        is the length units used for this model.  values can be 'feet', 'meters', or
        'centimeters'.  if not specified, the default is 'unknown'.
    nogrb : keyword
        keyword to deactivate writing of the binary grid file.
    grb_filerecord : (grb6_filename)
        * grb6_filename : string
                defines a binary grid output file.

    xorigin : double precision
        x-position of the origin used for model grid vertices.  this value should be
        provided in a real-world coordinate system.  a default value of zero is
        assigned if not specified.  the value for xorigin does not affect the model
        simulation, but it is written to the binary grid file so that postprocessors
        can locate the grid in space.
    yorigin : double precision
        y-position of the origin used for model grid vertices.  this value should be
        provided in a real-world coordinate system.  if not specified, then a default
        value equal to zero is used.  the value for yorigin does not affect the model
        simulation, but it is written to the binary grid file so that postprocessors
        can locate the grid in space.
    angrot : double precision
        counter-clockwise rotation angle (in degrees) of the model grid coordinate
        system relative to a real-world coordinate system.  if not specified, then a
        default value of 0.0 is assigned.  the value for angrot does not affect the
        model simulation, but it is written to the binary grid file so that
        postprocessors can locate the grid in space.
    export_array_ascii : keyword
        keyword that specifies input griddata arrays should be written to layered ascii
        output files.
    export_array_netcdf : keyword
        keyword that specifies input griddata arrays should be written to the model
        output netcdf file.
    packagedata : record ncf6 filein ncf6_filename
        Contains data for the ncf package. Data can be passed as a dictionary to the
        ncf package with variable names as keys and package data as values. Data for
        the packagedata variable is also acceptable. See ncf package documentation for
        more information.
    nlay : integer
        is the number of layers in the model grid.
    ncpl : integer
        is the number of cells per layer.  this is a constant value for the grid and it
        applies to all layers.
    nvert : integer
        is the total number of (x, y) vertex pairs used to characterize the horizontal
        configuration of the model grid.
    top : [double precision]
        is the top elevation for each cell in the top model layer.
    botm : [double precision]
        is the bottom elevation for each cell.
    idomain : [integer]
        is an optional array that characterizes the existence status of a cell.  if the
        idomain array is not specified, then all model cells exist within the solution.
        if the idomain value for a cell is 0, the cell does not exist in the
        simulation.  input and output values will be read and written for the cell, but
        internal to the program, the cell is excluded from the solution.  if the
        idomain value for a cell is 1, the cell exists in the simulation.  if the
        idomain value for a cell is -1, the cell does not exist in the simulation.
        furthermore, the first existing cell above will be connected to the first
        existing cell below.  this type of cell is referred to as a 'vertical pass
        through' cell.
    vertices : [list]
    cell2d : [list]

    """

    grb_filerecord = ListTemplateGenerator(
        ("prt6", "disv", "options", "grb_filerecord")
    )
    ncf_filerecord = ListTemplateGenerator(
        ("prt6", "disv", "options", "ncf_filerecord")
    )
    top = ArrayTemplateGenerator(("prt6", "disv", "griddata", "top"))
    botm = ArrayTemplateGenerator(("prt6", "disv", "griddata", "botm"))
    idomain = ArrayTemplateGenerator(("prt6", "disv", "griddata", "idomain"))
    vertices = ListTemplateGenerator(("prt6", "disv", "vertices", "vertices"))
    cell2d = ListTemplateGenerator(("prt6", "disv", "cell2d", "cell2d"))
    package_abbr = "prtdisv"
    _package_type = "disv"
    dfn_file_name = "prt-disv.dfn"
    dfn = [
        ["header"],
        [
            "block options",
            "name length_units",
            "type string",
            "reader urword",
            "optional true",
        ],
        [
            "block options",
            "name nogrb",
            "type keyword",
            "reader urword",
            "optional true",
        ],
        [
            "block options",
            "name grb_filerecord",
            "type record grb6 fileout grb6_filename",
            "reader urword",
            "tagged true",
            "optional true",
        ],
        [
            "block options",
            "name grb6",
            "type keyword",
            "in_record true",
            "reader urword",
            "tagged true",
            "optional false",
            "extended true",
        ],
        [
            "block options",
            "name fileout",
            "type keyword",
            "in_record true",
            "reader urword",
            "tagged true",
            "optional false",
        ],
        [
            "block options",
            "name grb6_filename",
            "type string",
            "preserve_case true",
            "in_record true",
            "reader urword",
            "optional false",
            "tagged false",
            "extended true",
        ],
        [
            "block options",
            "name xorigin",
            "type double precision",
            "reader urword",
            "optional true",
        ],
        [
            "block options",
            "name yorigin",
            "type double precision",
            "reader urword",
            "optional true",
        ],
        [
            "block options",
            "name angrot",
            "type double precision",
            "reader urword",
            "optional true",
        ],
        [
            "block options",
            "name export_array_ascii",
            "type keyword",
            "reader urword",
            "optional true",
            "mf6internal export_ascii",
        ],
        [
            "block options",
            "name export_array_netcdf",
            "type keyword",
            "reader urword",
            "optional true",
            "mf6internal export_nc",
        ],
        [
            "block options",
            "name ncf_filerecord",
            "type record ncf6 filein ncf6_filename",
            "reader urword",
            "tagged true",
            "optional true",
            "construct_package ncf",
            "construct_data packagedata",
            "parameter_name packagedata",
        ],
        [
            "block options",
            "name ncf6",
            "type keyword",
            "in_record true",
            "reader urword",
            "tagged true",
            "optional false",
        ],
        [
            "block options",
            "name filein",
            "type keyword",
            "in_record true",
            "reader urword",
            "tagged true",
            "optional false",
        ],
        [
            "block options",
            "name ncf6_filename",
            "type string",
            "preserve_case true",
            "in_record true",
            "reader urword",
            "optional false",
            "tagged false",
        ],
        [
            "block dimensions",
            "name nlay",
            "type integer",
            "reader urword",
            "optional false",
        ],
        [
            "block dimensions",
            "name ncpl",
            "type integer",
            "reader urword",
            "optional false",
        ],
        [
            "block dimensions",
            "name nvert",
            "type integer",
            "reader urword",
            "optional false",
        ],
        [
            "block griddata",
            "name top",
            "type double precision",
            "shape (ncpl)",
            "reader readarray",
        ],
        [
            "block griddata",
            "name botm",
            "type double precision",
            "shape (ncpl, nlay)",
            "reader readarray",
            "layered true",
        ],
        [
            "block griddata",
            "name idomain",
            "type integer",
            "shape (ncpl, nlay)",
            "reader readarray",
            "layered true",
            "optional true",
        ],
        [
            "block vertices",
            "name vertices",
            "type recarray iv xv yv",
            "shape (nvert)",
            "reader urword",
            "optional false",
        ],
        [
            "block vertices",
            "name iv",
            "type integer",
            "in_record true",
            "tagged false",
            "reader urword",
            "optional false",
            "numeric_index true",
        ],
        [
            "block vertices",
            "name xv",
            "type double precision",
            "in_record true",
            "tagged false",
            "reader urword",
            "optional false",
        ],
        [
            "block vertices",
            "name yv",
            "type double precision",
            "in_record true",
            "tagged false",
            "reader urword",
            "optional false",
        ],
        [
            "block cell2d",
            "name cell2d",
            "type recarray icell2d xc yc ncvert icvert",
            "shape (ncpl)",
            "reader urword",
            "optional false",
        ],
        [
            "block cell2d",
            "name icell2d",
            "type integer",
            "in_record true",
            "tagged false",
            "reader urword",
            "optional false",
            "numeric_index true",
        ],
        [
            "block cell2d",
            "name xc",
            "type double precision",
            "in_record true",
            "tagged false",
            "reader urword",
            "optional false",
        ],
        [
            "block cell2d",
            "name yc",
            "type double precision",
            "in_record true",
            "tagged false",
            "reader urword",
            "optional false",
        ],
        [
            "block cell2d",
            "name ncvert",
            "type integer",
            "in_record true",
            "tagged false",
            "reader urword",
            "optional false",
        ],
        [
            "block cell2d",
            "name icvert",
            "type integer",
            "shape (ncvert)",
            "in_record true",
            "tagged false",
            "reader urword",
            "optional false",
            "numeric_index true",
        ],
    ]

    def __init__(
        self,
        model,
        loading_package=False,
        length_units=None,
        nogrb=None,
        grb_filerecord=None,
        xorigin=None,
        yorigin=None,
        angrot=None,
        export_array_ascii=None,
        export_array_netcdf=None,
        packagedata=None,
        nlay=None,
        ncpl=None,
        nvert=None,
        top=None,
        botm=None,
        idomain=None,
        vertices=None,
        cell2d=None,
        filename=None,
        pname=None,
        **kwargs,
    ):
        """
        ModflowPrtdisv defines a DISV package.

        Parameters
        ----------
        model
            Model that this package is a part of. Package is automatically
            added to model when it is initialized.
        loading_package : bool
            Do not set this parameter. It is intended for debugging and internal
            processing purposes only.
        length_units : string
            is the length units used for this model.  values can be 'feet', 'meters', or
            'centimeters'.  if not specified, the default is 'unknown'.
        nogrb : keyword
            keyword to deactivate writing of the binary grid file.
        grb_filerecord : record
        xorigin : double precision
            x-position of the origin used for model grid vertices.  this value should be
            provided in a real-world coordinate system.  a default value of zero is
            assigned if not specified.  the value for xorigin does not affect the model
            simulation, but it is written to the binary grid file so that postprocessors
            can locate the grid in space.
        yorigin : double precision
            y-position of the origin used for model grid vertices.  this value should be
            provided in a real-world coordinate system.  if not specified, then a default
            value equal to zero is used.  the value for yorigin does not affect the model
            simulation, but it is written to the binary grid file so that postprocessors
            can locate the grid in space.
        angrot : double precision
            counter-clockwise rotation angle (in degrees) of the model grid coordinate
            system relative to a real-world coordinate system.  if not specified, then a
            default value of 0.0 is assigned.  the value for angrot does not affect the
            model simulation, but it is written to the binary grid file so that
            postprocessors can locate the grid in space.
        export_array_ascii : keyword
            keyword that specifies input griddata arrays should be written to layered ascii
            output files.
        export_array_netcdf : keyword
            keyword that specifies input griddata arrays should be written to the model
            output netcdf file.
        packagedata : record ncf6 filein ncf6_filename
            Contains data for the ncf package. Data can be passed as a dictionary to the
            ncf package with variable names as keys and package data as values. Data for
            the packagedata variable is also acceptable. See ncf package documentation for
            more information.
        nlay : integer
            is the number of layers in the model grid.
        ncpl : integer
            is the number of cells per layer.  this is a constant value for the grid and it
            applies to all layers.
        nvert : integer
            is the total number of (x, y) vertex pairs used to characterize the horizontal
            configuration of the model grid.
        top : [double precision]
            is the top elevation for each cell in the top model layer.
        botm : [double precision]
            is the bottom elevation for each cell.
        idomain : [integer]
            is an optional array that characterizes the existence status of a cell.  if the
            idomain array is not specified, then all model cells exist within the solution.
            if the idomain value for a cell is 0, the cell does not exist in the
            simulation.  input and output values will be read and written for the cell, but
            internal to the program, the cell is excluded from the solution.  if the
            idomain value for a cell is 1, the cell exists in the simulation.  if the
            idomain value for a cell is -1, the cell does not exist in the simulation.
            furthermore, the first existing cell above will be connected to the first
            existing cell below.  this type of cell is referred to as a 'vertical pass
            through' cell.
        vertices : [list]
        cell2d : [list]

        filename : str
            File name for this package.
        pname : str
            Package name for this package.
        parent_file : MFPackage
            Parent package file that references this package. Only needed for
            utility packages (mfutl*). For example, mfutllaktab package must have
            a mfgwflak package parent_file.
        """

        super().__init__(model, "disv", filename, pname, loading_package, **kwargs)

        self.length_units = self.build_mfdata("length_units", length_units)
        self.nogrb = self.build_mfdata("nogrb", nogrb)
        self.grb_filerecord = self.build_mfdata("grb_filerecord", grb_filerecord)
        self.xorigin = self.build_mfdata("xorigin", xorigin)
        self.yorigin = self.build_mfdata("yorigin", yorigin)
        self.angrot = self.build_mfdata("angrot", angrot)
        self.export_array_ascii = self.build_mfdata(
            "export_array_ascii", export_array_ascii
        )
        self.export_array_netcdf = self.build_mfdata(
            "export_array_netcdf", export_array_netcdf
        )
        self._ncf_filerecord = self.build_mfdata("ncf_filerecord", None)
        self._ncf_package = self.build_child_package(
            "ncf", packagedata, "packagedata", self._ncf_filerecord
        )
        self.nlay = self.build_mfdata("nlay", nlay)
        self.ncpl = self.build_mfdata("ncpl", ncpl)
        self.nvert = self.build_mfdata("nvert", nvert)
        self.top = self.build_mfdata("top", top)
        self.botm = self.build_mfdata("botm", botm)
        self.idomain = self.build_mfdata("idomain", idomain)
        self.vertices = self.build_mfdata("vertices", vertices)
        self.cell2d = self.build_mfdata("cell2d", cell2d)

        self._init_complete = True
