# autogenerated file, do not modify

from os import PathLike, curdir
from typing import Union

from flopy.mf6.data.mfdatautil import ArrayTemplateGenerator, ListTemplateGenerator
from flopy.mf6.mfpackage import MFChildPackages, MFPackage


class ModflowUtllaktab(MFPackage):
    """
    ModflowUtllaktab defines a LAKTAB package.

    Parameters
    ----------
    nrow : integer
        integer value specifying the number of rows in the lake table. there must be
        nrow rows of data in the table block.
    ncol : integer
        integer value specifying the number of columns in the lake table. there must be
        ncol columns of data in the table block. for lakes with horizontal and/or
        vertical ctype connections, ncol must be equal to 3. for lakes with embeddedh
        or embeddedv ctype connections, ncol must be equal to 4.
    table : [list]

    """

    table = ListTemplateGenerator(("laktab", "table", "table"))
    package_abbr = "utllaktab"
    _package_type = "laktab"
    dfn_file_name = "utl-laktab.dfn"
    dfn = [
        ["header", "multi-package"],
        [
            "block dimensions",
            "name nrow",
            "type integer",
            "reader urword",
            "optional false",
        ],
        [
            "block dimensions",
            "name ncol",
            "type integer",
            "reader urword",
            "optional false",
        ],
        [
            "block table",
            "name table",
            "type recarray stage volume sarea barea",
            "shape (nrow)",
            "reader urword",
        ],
        [
            "block table",
            "name stage",
            "type double precision",
            "shape",
            "tagged false",
            "in_record true",
            "reader urword",
        ],
        [
            "block table",
            "name volume",
            "type double precision",
            "shape",
            "tagged false",
            "in_record true",
            "reader urword",
        ],
        [
            "block table",
            "name sarea",
            "type double precision",
            "shape",
            "tagged false",
            "in_record true",
            "reader urword",
        ],
        [
            "block table",
            "name barea",
            "type double precision",
            "shape",
            "tagged false",
            "in_record true",
            "reader urword",
            "optional true",
        ],
    ]

    def __init__(
        self,
        model,
        loading_package=False,
        nrow=None,
        ncol=None,
        table=None,
        filename=None,
        pname=None,
        **kwargs,
    ):
        """
        ModflowUtllaktab defines a LAKTAB package.

        Parameters
        ----------
        model
            Model that this package is a part of. Package is automatically
            added to model when it is initialized.
        loading_package : bool
            Do not set this parameter. It is intended for debugging and internal
            processing purposes only.
        nrow : integer
            integer value specifying the number of rows in the lake table. there must be
            nrow rows of data in the table block.
        ncol : integer
            integer value specifying the number of columns in the lake table. there must be
            ncol columns of data in the table block. for lakes with horizontal and/or
            vertical ctype connections, ncol must be equal to 3. for lakes with embeddedh
            or embeddedv ctype connections, ncol must be equal to 4.
        table : [list]

        filename : str
            File name for this package.
        pname : str
            Package name for this package.
        parent_file : MFPackage
            Parent package file that references this package. Only needed for
            utility packages (mfutl*). For example, mfutllaktab package must have
            a mfgwflak package parent_file.
        """

        super().__init__(model, "laktab", filename, pname, loading_package, **kwargs)

        self.nrow = self.build_mfdata("nrow", nrow)
        self.ncol = self.build_mfdata("ncol", ncol)
        self.table = self.build_mfdata("table", table)

        self._init_complete = True
